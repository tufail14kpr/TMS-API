openapi: 3.0.0
info:
  title: TMS API
  version: 1.0.0
  description: API documentation for the TMS Blog application
servers:
  - url: http://localhost:3000
    description: Development server
tags:
  - name: Blogs
    description: Blog management API
components:
  schemas:
    Media:
      type: object
      properties:
        url:
          type: string
          description: The URL of the media file
        public_id:
          type: string
          description: The Cloudinary public ID of the media file
        resource_type:
          type: string
          enum: [image, video]
          description: The type of media (image or video)
      required:
        - url
        - public_id
        - resource_type
    Blog:
      type: object
      properties:
        id:
          type: string
          description: The blog ID (auto-generated by MongoDB)
        title:
          type: string
          description: The blog title
        slug:
          type: string
          description: The blog slug (unique)
        content:
          type: string
          description: The blog content
        author:
          type: string
          description: The author of the blog (optional)
        media:
          type: array
          items:
            $ref: '#/components/schemas/Media'
          description: Array of media files associated with the blog
        createdAt:
          type: string
          format: date-time
          description: The creation date of the blog
      required:
        - title
        - slug
        - content
        - createdAt
paths:
  /api/blogs:
    get:
      summary: Retrieve a list of all blogs
      tags:
        - Blogs
      responses:
        '200':
          description: A list of blogs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Blog'
        '500':
          description: Internal server error
    post:
      summary: Create a new blog
      tags:
        - Blogs
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The blog title
                slug:
                  type: string
                  description: The blog slug (must be unique)
                content:
                  type: string
                  description: The blog content
                author:
                  type: string
                  description: The author of the blog (optional)
                media:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Up to 5 media files (images/videos)
              required:
                - title
                - slug
                - content
      responses:
        '201':
          description: Blog created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
        '400':
          description: Invalid input (e.g., missing required fields or duplicate slug)
        '500':
          description: Internal server error
  /api/blogs/{slug}:
    get:
      summary: Retrieve a blog by slug
      tags:
        - Blogs
      parameters:
        - in: path
          name: slug
          required: true
          schema:
            type: string
          description: The blog slug
      responses:
        '200':
          description: A single blog
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
        '404':
          description: Blog not found
        '500':
          description: Internal server error
    put:
      summary: Update a blog by slug
      tags:
        - Blogs
      parameters:
        - in: path
          name: slug
          required: true
          schema:
            type: string
          description: The blog slug
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The blog title
                slug:
                  type: string
                  description: The blog slug (must be unique if changed)
                content:
                  type: string
                  description: The blog content
                author:
                  type: string
                  description: The author of the blog (optional)
                media:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Up to 5 media files (images/videos) to replace existing media
      responses:
        '200':
          description: Blog updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
        '404':
          description: Blog not found
        '400':
          description: Invalid input (e.g., duplicate slug)
        '500':
          description: Internal server error
    delete:
      summary: Delete a blog by slug
      tags:
        - Blogs
      parameters:
        - in: path
          name: slug
          required: true
          schema:
            type: string
          description: The blog slug
      responses:
        '200':
          description: Blog deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Confirmation message
        '404':
          description: Blog not found
        '500':
          description: Internal server error